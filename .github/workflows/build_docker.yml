name: Build and Push Docker Image

on:
  # Run when a new release branch is created
  push:
    branches:
      - 'release-*'
    tags:
      - 'v*.*.*'
  # Run after Release Sync workflow completes
  workflow_run:
    workflows: ["SourceForge Release to GitHub Sync"]
    types:
      - completed
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 9.4.0)'
        required: true
        default: ''

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set version from input, branch/tag, or workflow run
        id: set-version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.version }}" ]]; then
            # Get version from manual input
            VERSION="${{ github.event.inputs.version }}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "Using manually specified version: $VERSION"
            
            # Try to check out the release branch
            git fetch --all
            git checkout "release-$VERSION" || echo "Warning: Could not find release-$VERSION branch"
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            # Try to get the latest tag created by the previous workflow
            git fetch --tags --force
            LATEST_TAG=$(git tag -l "v*.*.*" --sort=-v:refname | head -n 1)
            if [ -n "$LATEST_TAG" ]; then
              VERSION="${LATEST_TAG#v}"
              echo "VERSION=$VERSION" >> $GITHUB_ENV
              echo "Using version from latest tag: $VERSION (from $LATEST_TAG)"
              
              # Check out the release branch or tag
              git checkout "$LATEST_TAG" || git checkout "release-$VERSION" || echo "Warning: Could not find branch/tag for $VERSION"
            else
              echo "No version tag found from previous workflow"
              echo "VERSION=latest" >> $GITHUB_ENV
            fi
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # Extract version from tag (v9.4.0 -> 9.4.0)
            VERSION="${{ github.ref_name }}"
            VERSION="${VERSION#v}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "Using version from tag: $VERSION"
          else
            # Extract version from branch name (release-9.4.0 -> 9.4.0)
            VERSION="${{ github.ref_name }}"
            VERSION="${VERSION#release-}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "Using version from branch: $VERSION"
          fi
          
          # List contents of the current directory for debugging
          echo "Current directory contents:"
          ls -la
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check directory structure
        run: |
          echo "Checking for ProjeQtOr files..."
          if [ -d "projeqtor" ]; then
            echo "ProjeQtOr directory found."
            ls -la projeqtor
          else
            echo "ProjeQtOr directory not found. Current directory contents:"
            ls -la
          fi
      
      - name: Build and push projeqtor image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/projeqtor:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/projeqtor:latest
      
      - name: Create GitHub Release
        # Only run if triggered by a tag push
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ProjeQtOr ${{ env.VERSION }}
          body: |
            ProjeQtOr version ${{ env.VERSION }}
            
            Docker images available at:
            - `ghcr.io/${{ github.repository_owner }}/projeqtor:${{ env.VERSION }}`
            - `ghcr.io/${{ github.repository_owner }}/projeqtor:latest`
            
            To run with Docker Compose:
            ```
            docker-compose pull
            docker-compose up -d
            ```
          draft: false
          prerelease: false
