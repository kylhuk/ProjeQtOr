name: Build and Push Docker Image

on:
  # Run when main branch is updated
  push:
    branches:
      - main
  # Also run when a new SVN branch is created
  push:
    branches:
      - 'svn-r*'
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from (default: main)'
        required: false
        default: 'main'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set branch name
        id: branch
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.branch }}" ]]; then
            echo "BRANCH_NAME=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi
          echo "Building from branch: ${{ env.BRANCH_NAME }}"
      
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      
      - name: Extract SVN revision
        id: extract-version
        run: |
          # If building from main branch, try to get SVN revision from commit message
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            SVN_REV=$(git log -1 --pretty=%B | grep -o "revision [0-9]*" | awk '{print $2}')
            if [ -z "$SVN_REV" ]; then
              # Fallback: try to find the latest SVN revision by checking the svn directory content
              SVN_REV="latest"
            fi
          else
            # If building from an SVN branch, extract version from branch name
            SVN_REV=$(echo "${{ env.BRANCH_NAME }}" | sed -n 's/^svn-r\([0-9]*\)$/\1/p')
          fi
          
          if [ -n "$SVN_REV" ]; then
            echo "SVN_REVISION=$SVN_REV" >> $GITHUB_ENV
            echo "IMAGE_TAG=$SVN_REV" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi
          echo "Building image with tag: ${{ env.IMAGE_TAG }}"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push projeqtor image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/projeqtor:${{ env.IMAGE_TAG }}
            ghcr.io/${{ github.repository_owner }}/projeqtor:latest
      
      - name: Create release
        uses: actions/create-release@v1
        if: ${{ env.IMAGE_TAG != 'latest' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.IMAGE_TAG }}
          release_name: ProjeQtOr v${{ env.IMAGE_TAG }}
          body: |
            ProjeQtOr SVN revision ${{ env.SVN_REVISION }}
            
            Docker images available at:
            - `ghcr.io/${{ github.repository_owner }}/projeqtor:${{ env.IMAGE_TAG }}`
            - `ghcr.io/${{ github.repository_owner }}/projeqtor:latest`
            
            To run with Docker Compose:
            ```
            docker-compose pull
            docker-compose up -d
            ```
          draft: false
          prerelease: false
